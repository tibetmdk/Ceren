Nome do exercício: sort_list
Arquivos esperados: sort_list.c
Funções permitidas: 
--------------------------------------------------------------------------------

Escreva as seguintes funções:

t_list	*sort_list(t_list* lst, int (*cmp)(int, int));

Esta função deve ordenar a lista fornecida como parâmetro, usando o ponteiro 
de função cmp para selecionar a ordem a ser aplicada, e retornar um ponteiro 
para o primeiro elemento da lista ordenada.

As duplicações devem permanecer.

As entradas serão sempre consistentes.

Você deve usar o tipo t_list descrito no arquivo list.h 
que é fornecido a você. Você deve incluir esse arquivo 
(#include "list.h"), mas não deve entregá-lo. Usaremos o nosso próprio 
para compilar seu exercício.

As funções passadas como cmp sempre retornarão um valor diferente de 
0 se a e b estiverem na ordem correta, 0 caso contrário.

Por exemplo, a seguinte função usada como cmp ordenará a lista 
em ordem crescente:

int ascending(int a, int b)
{
	return (a <= b);
}
